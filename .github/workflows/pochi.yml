name: Pochi Reviewer & Gatekeeper

on:
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  pochi_review:
    # Run on PR open/sync OR when a PR comment contains "/pochi"
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/pochi'))
    runs-on: ubuntu-latest
    outputs:
      review_result: ${{ steps.extract.outputs.review_result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Pochi Review
        id: run_pochi
        uses: tabbyml/pochi/packages/github-action@main
        env:
          POCHI_API_KEY: ${{ secrets.POCHI_API_KEY }}
        with:
          args: >-
            review this PR in detail. At the end, on the last line only,
            output exactly one of: ✅ APPROVED or ❌ CHANGES_REQUIRED

      # Capture last line of Pochi’s output into a real output
      - name: Extract decision
        id: extract
        run: |
          last_line="$(echo "${{ steps.run_pochi.outputs.result }}" | tail -n 1)"
          echo "review_result=$last_line" >> $GITHUB_OUTPUT

      # Debugging helpers
      - name: Debug raw Pochi output
        run: |
          echo "=== Raw Output ==="
          echo "${{ steps.run_pochi.outputs.result }}"

      - name: Debug extracted decision
        run: |
          echo "Extracted decision: ${{ steps.extract.outputs.review_result }}"

  run_tests:
    needs: pochi_review
    if: contains(needs.pochi_review.outputs.review_result, '✅ APPROVED')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Tests
        run: |
          echo "✅ Running tests... (replace with real test command)"
          # Example:
          # npm ci
          # npm test

  deploy:
    needs: run_tests
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          echo "🚀 Deploying application..."
          # Example:
          # npm run deploy

  notify_slack:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "🚀 Deployment complete for PR #${{ github.event.pull_request.number || github.event.issue.number }}\nRepo: ${{ github.repository }}\nDecision: ${{ needs.pochi_review.outputs.review_result }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
