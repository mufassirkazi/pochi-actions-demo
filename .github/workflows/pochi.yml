name: Pochi Reviewer & Gatekeeper

on:
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  pochi_review:
    # run on PR open/sync OR when a PR comment contains /pochi
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/pochi'))
    runs-on: ubuntu-latest
    outputs:
      review_result: ${{ steps.run_pochi.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Pochi Review
        id: run_pochi
        uses: tabbyml/pochi/packages/github-action@main
        env:
          POCHI_API_KEY: ${{ secrets.POCHI_API_KEY }}
        with:
          args: >-
            review this PR in detail. At the end, on the last line only,
            output exactly one of: ‚úÖ APPROVED or ‚ùå CHANGES_REQUIRED

      # Use block scalars so YAML doesn't choke on ${{ ‚Ä¶ }}
      - name: Debug Pochi output (string)
        run: |
          echo "Pochi result: ${{ steps.run_pochi.outputs.result }}"

      - name: Debug Pochi outputs (JSON)
        run: |
          echo '${{ toJSON(steps.run_pochi.outputs) }}'

  run_tests:
    needs: pochi_review
    if: contains(needs.pochi_review.outputs.review_result, '‚úÖ APPROVED')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Tests
        run: |
          echo "‚úÖ Running tests... (replace with your test command)"
          # e.g. npm ci && npm test

  deploy:
    needs: run_tests
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          echo "üöÄ Deploying application..."
          # e.g. npm run deploy

  notify_slack:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "üöÄ Deployment complete for PR #${{ github.event.pull_request.number || github.event.issue.number }}\nRepo: ${{ github.repository }}\nStatus: ‚úÖ Approved by Pochi"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
