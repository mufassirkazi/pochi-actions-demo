name: Pochi Auto-Comments

on:
  issues:
    types: [opened]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  issue_design_note:
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment with Pochi instructions
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const body = [
              "/pochi reply-only --no-files --no-tools",
              "",
              "⚠️ Do not edit files or run commands.",
              "Stay inside this issue comment only.",
              "",
              "When outputting a Mermaid diagram, use **this exact format**:",
              "",
              "```mermaid",
              "graph TD",
              "  A[Start] --> B[Next]",
              "```",
              "",
              "⬆️ Notice the line break after `mermaid`. Each line must be separate.",
              "",
              "After the diagram, add a short text explanation."
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body
            });

  fix_mermaid_output:
    needs: issue_design_note
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest comment
        id: fetch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              per_page: 1,
              sort: "created",
              direction: "desc"
            });
            core.setOutput("comment_body", comments[0].body);

      - name: Rewrite Mermaid formatting
        id: rewrite
        run: |
          FIXED=$(echo "${{ steps.fetch.outputs.comment_body }}" \
            | sed 's/```mermaid graph/```mermaid\n graph/')
          echo "fixed_body<<EOF" >> $GITHUB_ENV
          echo "$FIXED" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post fixed Mermaid comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: process.env.fixed_body
            });
