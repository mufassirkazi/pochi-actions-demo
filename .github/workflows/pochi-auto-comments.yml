name: Pochi Auto-Comments

on:
  pull_request:
    types: [opened]
  push:
    branches:
      - main
  issues:
    types: [opened]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  # -------------------------------
  # PR auto-summary
  # -------------------------------
  pr_auto_summary:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment for PR summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "/pochi summarize this PR. Provide a high-level overview, key changes, risks, and what to test. (auto-triggered)"
            });

  # -------------------------------
  # Push commit summary
  # -------------------------------
  push_commit_summary:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment for Commit Summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const commits = context.payload.commits.map(c => `- ${c.message}`).join("\n");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 1, // üëà replace with an always-open "changelog" issue number
              body: `/pochi summarize these commits:\n\n${commits}`
            });

  # -------------------------------
  # Issue ‚Üí design note (no files touched)
  # -------------------------------
  issue_design_note:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment with design request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const body = [
              "/pochi reply-only --no-files --no-tools",
              "",
              "üìå Draft design steps for this issue:",
              "- Break down the problem",
              "- Propose solution approaches (with pros/cons)",
              "- Identify risks & edge cases",
              "- Suggest acceptance criteria",
              "",
              "‚ö†Ô∏è Do not create or edit any files ‚Äî stay inside this issue comment only."
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body
            });
