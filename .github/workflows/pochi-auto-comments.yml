name: Pochi Auto-Comments

on:
  pull_request:
    types: [opened]
  push:
    branches: [main]
  issues:
    types: [opened]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  pr_auto_summary:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment for PR summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "/pochi summarize this PR. Provide a high-level overview, key changes, risks, and what to test. (auto-triggered)"
            });

  push_commit_summary:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment for Commit Summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const commits = (context.payload.commits || []).map(c => `- ${c.message}`).join("\n");
            const body = [
              "/pochi summarize these commits:",
              "",
              commits
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 1, # üëà replace with a real tracking issue number
              body
            });

  issue_design_note:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-comment for Issue design note
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          script: |
            const body = [
              "/pochi reply-only --no-files --no-tools",
              "",
              "‚ö†Ô∏è Do not edit files or run commands.",
              "Stay inside this issue comment only.",
              "",
              "When outputting a Mermaid diagram, use **this exact format**:",
              "",
              "```mermaid",
              "graph TD",
              "  A[Start] --> B[Next]",
              "```",
              "",
              "‚¨ÜÔ∏è Notice the line break after `mermaid`. Each line must be separate.",
              "",
              "After the diagram, add a short text explanation."
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body
            });
